/* --------------------------------

Colours

-------------------------------- */


// Define HSL color variable
@mixin defineColorHSL($color, $hue, $saturation, $lightness){
  #{$color}: unquote("hsl(#{$hue}, #{$saturation}, #{$lightness})");#{$color}-h: #{$hue};#{$color}-s: #{$saturation};#{$color}-l: #{$lightness};
}


// Return color with different opacity value
@function alpha($color, $opacity){
  $color: str-replace($color, "var(");
  $color: str-replace($color, ")");
  $color-h: var(#{$color+"-h"});
  $color-s: var(#{$color+"-s"});
  $color-l: var(#{$color+"-l"});
  @return hsla($color-h, $color-s, $color-l, $opacity);
}


// Return color with different lightness value
@function lightness($color, $lightnessMultiplier){
  $color: str-replace($color, "var(");
  $color: str-replace($color, ")");
  $color-h: var(#{$color+"-h"});
  $color-s: var(#{$color+"-s"});
  $color-l: var(#{$color+"-l"});
  @return hsl($color-h, $color-s, calc(#{$color-l} * #{$lightnessMultiplier}));
}


// Replace substring with another string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  @return $string;
}


:root, [data-theme="default"] {

  // Primary
  @include defineColorHSL(--color-primary, 338, 87%, 62%);

  // Secondary
  @include defineColorHSL(--color-secondary, 169, 80%, 75%);

  // Tertiary
  @include defineColorHSL(--color-tertiary, 62, 87%, 62%);

  // Quaternary
  @include defineColorHSL(--color-quaternary, 315, 58%, 88%);

  // Black + white
  @include defineColorHSL(--color-black, 0, 0%, 0%);
  @include defineColorHSL(--color-white, 0, 0%, 100%);

  // Color contrasts
  @include defineColorHSL(--color-bg, 0, 0%, 100%);
  @include defineColorHSL(--color-contrast-lower, 0, 0%, 96%);
  @include defineColorHSL(--color-contrast-low, 240, 2%, 83%);
  @include defineColorHSL(--color-contrast-medium, 257, 3%, 41%);
  @include defineColorHSL(--color-contrast-high, 258, 13%, 15%);

}