/*
  Font sizes (https://www.liquidlight.co.uk/blog/article/responsive-typography-in-scss)

  How to use:
  @include typography(84);
*/


/*
  Root font size

  This is used to calculate rem sizes for the typography, and should match the
  _effective_ font-size of your root (or html) element.

  Ideally you should not be setting the font-size on the html or root element in
  order to allow it to scale with user-preference, in which case this should be
  set to 16px.
*/

$root-font-size: 16px !default;


/*
  Responsive typograhy map

  This is used to generate responsive typography that adapts according to the
  breakpoints.

  Font size and font weight can be defined for each breakpoint. You can define
  different behaviour on table and desktop. The 'base' breakpoint is for mobile.

  Line-heights will automatically be converted from pixel measurements into
  relative values. For example, with a font-size of 16px and a line height of
  24px, the line height will be converted to 1.5 before output.
*/

$typography-scale: (

  84: (

    base: (
      font-size: 48px,
      line-height: (56/48),
      letter-spacing: -1.5px
    ),

    md: (
      font-size: 84px,
      line-height: (84/84),
      letter-spacing: -2px
    )

  ),

  48: (

    base: (
      font-size: 36px,
      line-height: (40/36),
      letter-spacing: -1px
    ),

    md: (
      font-size: 48px,
      line-height: (56/48),
      letter-spacing: -1.5px
    )

  ),

  36: (

    base: (
      font-size: 24px,
      line-height: (32/24),
      letter-spacing: -0.5px
    ),

    md: (
      font-size: 36px,
      line-height: (40/36),
      letter-spacing: -1px
    )

  ),

  24: (

    base: (
      font-size: 24px,
      line-height: (32/24),
      letter-spacing: -0.5px
    )

  ),

  20: (

    base: (
      font-size: 20px,
      line-height: (24/20)
    )

  ),

  16: (

    base: (
      font-size: 16px,
      line-height: (24/16)
    )

  )

) !default;


@mixin prop-value($map) {
  @each $prop, $value in $map {
    #{$prop}: #{$value};
  }
}


@mixin typography($element) {

  $map: map-get($typography-scale, $element);
  $base: map-get($map, base);

  @include prop-value($base);

  $mq: map-remove($map, base);

  @each $breakpoints, $attr in $mq {
    @include breakpoint($breakpoints) {
      @include prop-value($attr);
    }
  }

}
