/*
Single point spacing

Returns measurement corresponding to the spacing point requested.

Example: scss
.element {
  padding-left: spacing(5);
}
*/

@function spacing($spacing-point) {
  $actual-input-type: type-of($spacing-point);
  @return map-get($spacing-points, $spacing-point);
}


/*
Responsive spacing

Adds responsive spacing (either padding or margin, depending on `$property`)
by fetching a 'spacing map' from the responsive spacing scale, which defines
different spacing values at different breakpoints.

To generate responsive spacing, use 'responsive-margin' or 'responsive-padding'
mixins.
*/

@mixin _responsive-spacing($responsive-spacing-point, $property, $direction: "all", $important: false, $adjustment: false) {

  $actual-input-type: type-of($responsive-spacing-point);

  // Make sure that the return value from `_settings/spacing.scss` is a map.
  $scale-map: map-get($spacing-responsive-scale, $responsive-spacing-point);
  $actual-map-type: type-of($scale-map);

  // Loop through each breakpoint in the map
  @each $breakpoint, $breakpoint-value in $scale-map {

    @if ($adjustment) {
      $breakpoint-value: $breakpoint-value + $adjustment;
    }

    // The 'base' breakpoint is for mobile.
    @if $breakpoint == base {

      @if $direction == all {
        #{$property}: $breakpoint-value iff($important, !important);
      } @else {
        #{$property}-#{$direction}: $breakpoint-value iff($important, !important);
      }
    } @else {
      @include mq($from: $breakpoint) {
        @if $direction == all {
          #{$property}: $breakpoint-value iff($important, !important);
        } @else {
          #{$property}-#{$direction}: $breakpoint-value iff($important, !important);
        }
      }
    }
  }
}


/*
Responsive margin

Adds responsive margin by fetching a 'spacing map' from the responsive
spacing scale, which defines different spacing values at different
breakpoints.

Wrapper for the `_govuk-responsive-spacing` mixin.

Example: scss
.element {
  @include responsive-margin(6, "left", $adjustment: 1px);
}
*/

@mixin responsive-margin($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {
  @include _responsive-spacing($responsive-spacing-point, "margin", $direction, $important, $adjustment);
}


/*
Responsive padding

Adds responsive padding by fetching a 'spacing map' from the responsive
spacing scale, which defines different spacing values at different
breakpoints.

Wrapper for the `_govuk-responsive-spacing` mixin.

Example: scss
.element {
  @include responsive-padding(6, "left", $adjustment: 1px);
}
*/

@mixin responsive-padding($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {
  @include _responsive-spacing($responsive-spacing-point, "padding", $direction, $important, $adjustment);
}